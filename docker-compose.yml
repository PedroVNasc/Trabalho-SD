version: "3.8"

services:
    zookeeper:
        image: zookeeper
        ports:
            - "2181:2181"
        networks:
            - backend-net

    kafka:
        image: wurstmeister/kafka
        ports:
            - "9092:9092"
        environment:
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            ALLOW_PLAINTEXT_LISTENER: 1
        depends_on:
            - zookeeper
        networks:
            - backend-net

    mongo:
        image: mongo
        ports:
            - "27017:27017"
        networks:
            - backend-net

    # kafka-setup:
    #     build:
    #         context: ./kafka
    #         dockerfile: Dockerfile.dev
    #     ports:
    #         - "3001:3001"
    #     depends_on:
    #         - kafka
    #     networks:
    #         - backend-net

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile.dev
        ports:
            - "3000:7011"
        depends_on:
            - mongo
            - kafka
            # - kafka-setup
        networks:
            - backend-net

    frontend:
        image: caddy:latest
        restart: unless-stopped
        ports:
            - "5011:5011"
        networks:
            - backend-net
        volumes:
            - ./frontend/Caddyfile:/etc/caddy/Caddyfile
            - ./frontend/site:/srv
      #      - caddy_data:/data
      #      - caddy_config:/config
    
   # volumes:
    #    caddy_data:./fronted/data
     #   caddy_config:./frontend/config

networks:
    backend-net:
